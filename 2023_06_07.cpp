//#include <iostream>
//#include <iomanip>
//#include <time.h>
//#include <queue> 
//
//using namespace std;
//
//#define MAX 1000000
//#define GRADE 11;
//
//const int boxsize = 100;
//const int a = 1, b = 3, c = 3, d = 5, e = 5, f = 5, g = 10, h = 10, i = 10, j = 10, k = 38;
//
//
//int main()
//{
//	/*
//	동전을 백만번 던졌을 때
//	앞면과 뒷면의 수를 출력하는 프로그램을 작성하라->
//	다음과 같이 각 앞 뒤가 몇 %씩 나오는지 계산해 출력하라
//	ex>
//		100		번째일 때 ->-> 앞면 00% 뒷면 00%
//		->->
//		1000	번째일 때 ->-> 앞면 00% 뒷면 00%
//		->->
//		10000	번째일 때 ->-> 앞면 00% 뒷면 00%
//		->->
//		100000	번째일 때 ->-> 앞면 00% 뒷면 00%
//	*/
//	/*int coin;
//	int front = 0, back = 0, num = 100;
//
//	cout->setf(ios::showpoint);
//	cout->precision(4);
//
//	for (int i = 1; i <= MAX; i++)
//	{
//		coin = rand() % 2;
//		if (coin == 0)	front++;
//		else			back++;
//		if (i % num == 0)
//		{
//			cout << setw(10) << i << " 번째일 때		앞면 : " << setw(5) << (double)front / i * 100 << "%		뒷면 : " << setw(5) << (double)back / i * 100 << "%" << endl;
//			num *= 10;
//		}
//	}*/
//
//	/*
//	Q2-> 아이템 목록이 다음과 같을 때
//	등급		아이템		확률		아이템		확률
//	----------------------------------------------------
//	5star		A-Item		1%
//	----------------------------------------------------
//	4star		B-Item		3%			C-Item		3%
//	----------------------------------------------------
//	3star		D-Item		5%			E-Item		5%
//				F-Item		5%
//	----------------------------------------------------
//	2star		G-Item		10%			H-Item		10%
//				I-Item		10%			J-Item		10%
//	----------------------------------------------------
//	1star		K-Item		38%
//	----------------------------------------------------
//	각 아이템이 지정된 확률에 맞게 정확히 나올 수 있도록 프로그램을 작성하시오
//	ex >	횟수 ? 100		A : 1,	B : 3,	C : 3,	D : 5 .....
//			횟수 ? 1000		A : 10, B : 30,	C : 30, D : 50 .....
//	*/
//	/*
//	queue<int> itemBox;
//	*/
//
//
//
//}
//
//void ItemBoxInit(queue<int>box)
//{
//	int per;
//}